---
import { type CollectionEntry, render } from "astro:content";
import { Image } from "astro:assets";

interface Props {
  entry:
    | CollectionEntry<"work">
    | CollectionEntry<"education">
    | CollectionEntry<"volunteering">;
  full?: boolean;
}

const { entry, full } = Astro.props;

const { pic, link, header, subheader, location, start, end } = entry.data;

const href = link ?? `/work/${entry.slug}`;
const target = link ? "_blank" : "_self";
const rel = link ? "noopener" : "";

const { Content } = await render(entry);
---

<article class="resume-item" transition:name={`item-${header}`}>
  <a href={href} target={target} rel={rel}>
    <Image
      transition:name={`logo-${header}`}
      src={pic}
      alt={header}
      width={300}
      height={300}
      densities={[1, 2]}
    />
  </a>

  <a href={href} target={target} rel={rel}>
    <h3>{header}</h3>
    <h4>{subheader}</h4>
  </a>

  {
    full && (
      <div class="sub">
        <Content />
      </div>
    )
  }
  <p class="sub">{location}</p>
  <p class="sub">
    {
      new Intl.DateTimeFormat("en-US", {
        year: "numeric",
      }).format(start)
    } - {
      new Intl.DateTimeFormat("en-US", {
        year: "numeric",
      }).format(end)
    }
  </p>
</article>

<style>
  .resume-item {
    display: inline-block;
    font-family: "Maven Pro Variable", sans-serif;
    width: 100%;
    object-fit: contain;
    min-width: 150px;

    a {
      color: black;
    }

    h3 {
      font-weight: normal;
    }

    h4 {
      font-weight: normal;
      line-height: 1.3;
    }

    .sub {
      font-size: 0.8em;
      color: gray;
    }

    img,
    svg {
      width: 100%;
      max-width: 100%;
      cursor: pointer;
      aspect-ratio: 1 / 1;
    }
  }

  @media screen and (min-width: 650px) {
    .resume-item {
      width: 300px;
    }
  }
</style>
