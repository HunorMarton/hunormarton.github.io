---
import type { CollectionEntry } from "astro:content";
import { getPrimaryLink } from "../../utility";
import Preview from "./Preview.astro";
import HobbyDescription from "./HobbyDescription.astro";

interface Props {
  entry: CollectionEntry<"hobbies">;
}

const { entry } = Astro.props;

const link = getPrimaryLink(entry);
const embeddable = !link.href.includes("skl.sh"); // Skillshare embeds are not supported
const { Content } = await entry.render();
---

<main>
  <figure class:list={[{ embeddable }]}>
    {
      embeddable && (
        <iframe
          allowfullscreen
          loading="lazy"
          src={getPrimaryLink(entry, true).href}
        />
      )
    }
    <Preview entry={entry} self={false} />
  </figure>

  <HobbyDescription entry={entry}>
    <Content />
  </HobbyDescription>
</main>

<style>
  main {
    display: grid;
    justify-content: center;
    width: 100%;
    height: 100%;
    max-height: 100%;
    overflow: scroll;

    padding: 80px 0;
    box-sizing: border-box;
    container-type: inline-size;
  }

  figure {
    margin: 0;
    padding: 0;

    display: flex;
    justify-content: center;
    align-items: center;
  }

  @media screen and (min-width: 1100px) {
    main {
      grid-template-columns: auto minmax(300px, 500px);
      padding: 0;
    }
  }

  iframe {
    width: 100%;
    height: auto;
    min-width: 600px;
    max-height: 100vh;
    aspect-ratio: 16 / 12;
    border: 1px solid #ccc;
    box-sizing: border-box;
  }
</style>

<style is:global>
  /* If the project is embeddable, keep the embed and hide the preview */
  .embeddable *:last-child {
    display: none;
  }

  /* On smaller screen sizes remove the embed even if it's embeddable */
  @container (max-width: 600px) {
    .embeddable *:first-child {
      display: none;
    }

    .embeddable *:last-child {
      display: block;
    }
  }
</style>
